리눅스

20.03.23

평가 기준(100점 만점)
1.이론
-개념 이해
-4지선다 선택 + 단답형

2.실기
-완성도
-시간 내 제출 엄수

<진행>
Linux 운영체제 이해			
Linux 명령어 활용			
디렉터리와 파일 관리			
파일 접근권한 설정			
패키지 관리 이해		
Web & DB Server
를 우선적으로 학습한 후, 상황에 따라 추가 학습 하고자 합니다. 참고하셔요 :)


**리눅스교재에 자세하게 나와있으니 참고하기.(리눅스 시스템 구축 실무테크닉)

★CentOS★
버추얼박스 설치할 때, 
https://www.virtualbox.org/
다운로드에 들어가서 Windows hosts로 다운로드.

CentOS7은 사이트 들어가서 하단의 more downloads choice에서
다운받을 것. 버전이 다양함

ip addr (내 아이피 보여주는 명령어/ addr=address 줄임말)

리눅스 운영체제 - 커널, 셸, 사용자프로그램
커널:핵심적인 기능을 실질적으로 하는 것
셸:사이를 연결해주는 것, GUI(그래픽)와 CLI(명령어) 두 가지가 있음

date : 현재 날짜, 시각 표시
datetimectl : 현재 설정 상태 표시
cal : 달력 출력(오늘 날짜가 포함된 달력 출력)
cal 연도 : 입력한 연도의 달력 출력 (ex. cal 2019 : 2019년의 달력 총 출력)
clear : 지우기
history : 지금까지 쓴 명령 출력
logname : 아이디 확인
users : 접속한 사용자 아이디 확인
who : users와 같은데 접속 시간도 나타냄
whoami : 현재 사용자 계정 확인, 내가 누군지 확인
who am i : whoami보다 더 자세하게 정보 출력

uname : 시스템 정보 출력
-a : 시스템의 모든 정보 출력(all)
-m : 시스템이 사용중인 하드웨어 정보 출력(마더보드)
-n : 호스트네임 출력(name)
-r : 운영체제의 릴리즈 번호 출력
-s : 운영체제의 이름 출력(system)
-v : 운영체제의 버전 출력(version)
>> 하나만 보는 게 아니라 다른 것도 동시 출력하고 싶을땐 붙여서 쓰면 됨
>> ex. uname ns(시스템이름과 호스트네임 출력, 순서는 상관없음)
hostname : 호스트네임 출력(= uname -n)

arch : 하드웨어 정보 출력(= uname -m)
env : 환경변수 출력(중요)
echo : 문자열 출력 (ex. echo hahaha : hahaha라는 문자출력)
echo $____ :  환경변수값 출력은 변수 앞에 $붙이기 
>> ex. echo $SHELL 하면 /bin/bash 출력됨
>> 그래서 echo는 문자열도 출력할 수 있고, 환경변수 내용도 출력할 수 있다.
echo __ 이스케이프 : 표준형식 출력(이스케이프 문자 사용)
which ___ : 알고싶은 명령어 위치(디렉토리) 출력
>> ex. which echo 입력하면 /bin/echo 위치 출력됨

*히스토리 출력 후 나오는 앞 번호를 입력하면 해당 값이 출력됨
>> !10 입력하면 10번째의 명령어가 출력됨 
>> ex. 히스토리에 31 arch면 !31 입력했을때 arch가 출력



2020.03.24

버추얼박스를 mobaXterm에 연결하려면...
-버추얼박스의 연결할 세션의 네트워크 클릭
-다음에 연결됨을 '어댑터에 브리지'로 선택
-확인 후 시작해서 아이피 확인
-모바텀엑스로 가서 start local terminal
-창이 뜨면, ssh 계정@198.168.x.x(ip 주소) = 시큐어 쉘 입력
-그런다음 패스워드 입력해서 접속 성공하면 완료!
*모바텀엑스로 하면 버추얼박스보다 더 보기 편하게 작업가능(필수는 아님)

*디렉터리와 파일
파일의 구성요소
-파일이름 
-i-node : 파일의 고유번호
-데이터블록 : 데이터를 저장하는 블록

작업디렉터리와 홈디렉터리.
-홈디렉터리는 '~'로 표기

절대경로와 상대경로
절대경로:/로 시작(최상위, 루트 디렉터리가 기준)
상대경로:'/'이외의 문자로 시작(현재 속한 디렉터리가 기준)
>>상대경로 현재 위치는 '.'으로 상위 디렉터리는 '..'으로 표기

pwd : 현재 디렉터리 위치 절대경로로 출력
cd ___ : 현재 디렉터리 위치 이동(change directory)
>>홈 디렉터리 갈 땐 틸드(~)만 입력하거나 cd만 냅두기(ex. cd ~ or cd)
>>___에는 /__(절대경로), ../__(상대경로)가 들어갈 수 있음

ls __: list로, 현재 디렉터리의 파일 리스트 보여줌, 데이터 유무 체크도 가능
-a : 숨겨진 파일까지 포함, 모든 파일 리스트 출력
-d : 지정한 디렉토리에 존재하는 파일과 디렉터리의 정보 출력
-n : 호스트네임 확인
-i : 첫번째 열에 i-node 번호 출력
-l : 파일 상세정보 출력
-A : .와 ..를 제외한 모든 파일 리스트 출력
-F :
-L :
-R : 하위 디렉터리 리스트 출력

dir : ls 심볼릭 링크
vdir : ls -l 심볼릭 링크
mkdir ____ : make directory, 디렉터리 생성
>>여러개 생성 시엔 mkdir ___ ___ ___ 띄어쓰기 하고 디렉터리명 입력
>>이동할 때 앞글자 쓰고 탭 키누르면 자동완성으로 어떤 파일 있는지 알려줌
mkdir -p __/__/__ : 중간계층 디렉터리 자동 생성
*옵션 위치는 앞에 오든 뒤에 오든 상관없음.
rmdir ____ : remove directory, 디렉터리 삭제
>>지우려는 디렉터리 안에 파일 있으면 삭제불가
rm -r ___ : remove -r 옵션사용해서 비어있지 않은 파일도 삭제가능

*파일 관리 명령어
touch ____ : 빈 파일 생성, 이미 존재하는 파일일 경우 파일 변경시간 적용
cp 파일명 생성위치: copy, 파일 복사
>>ex. cp text_01 temp = temp 디렉터리에 text_01파일 생성
cp -r 복사할파일 복사된파일명 : 디렉터리 복사할 때 -r 옵션 사용
cp -i : -i 옵션으로 같은 파일 존재할 경우 덮어씌울지 질문 뜨게 설정



2020.03.25

find 옵션 동작 : 파일 찾기, 주로 -print 많이 사용
find 디렉터리명 -name 파일명 : 디렉터리에 존재하는 파일(이름) 찾기
find . -type f -name 'h*' -print : file중 알파벳 h로 시작하는 파일명 출력
find . -type f -name '*' -empty -exec ls -l {} \;
>>현재dir~하위dir(.)까지 빈파일(-empty) 리스트 출력(ls)
>>-exec 명령 -l {} \; : 검색된 파일에 명령 실행
find 자세한 건 교재 p.162~ 참고

cat 옵션 파일or디렉터리명 : 파일or디렉터리 내용 연속출력
>>행 번호도 같이 출력시 옵션 -n 사용
>>내용이 엄청 많이 나옴 그래서 특정문자열 출력 시 grep 사용
grep 옵션 특정문자열 검색할파일명 : 특정 문자열만 출력(검색)
>>ex. grep -n DHCP ex_data = ex_data에서 DHCP포함부분 행 번호(-n)와 출력

whereis 파일명 : 경로 알려주는 명령
which 명령 : alias(별칭, 별명)으로 경로 출력 (환경변수, alias로 검색가능)

mv 원본파일명 이동파일명 : move, 파일을 파일로 이동. 존재하는 파일이면 덮어씌움
mv 원본파일명 디렉터리명 : 파일을 디렉터리로 이동, 존재하는 파일이면 알림 뜸
mv 파일명1 파일명2 디렉터리명 : 여러가지 파일 이동, 파일명 입력시 경로도 입력!
>>ex. mv temp/text_01 temp/text_2 . = 현재 위치로 temp의 text_01, 02파일 이동
rm -ri 파일/디렉터리 : 삭제 여부 하나하나 체크하며 삭제

ln 원본파일명 링크파일명 : link의 l, 하드링크 파일 생성
ln -s 원본파일명 링크파일명 : 심볼릭(소프트)링크 파일 생성
>>ls -i로 출력해서 i-node 확인, 원본파일 i-node가 하드는 똑같고 심볼릭은 다름


*리눅스 에디터
-gedit : gul 구동
-vi 에디터 : 명령, 입력, 라인 3가지 모드 有

*vi 명령어
vi 파일명 : 존재파일이면 그 파일이 열리고, 없으면 빈 파일 생성
>>열리면 명령모드로 들어가지고 i 누르면 insert(입력)모드 들어가짐
:w : 입력하여 저장하기(write) = 라인모드 들어가는 건 콜론 입력
:q : 라인모드 나가기, 그만 두다(quit)
:wq : 저장하고 나가기
/문자열 : 특정문자열 커서위치 아래쪽으로 검색
?문자열 : 특정문자열 커서위치 위쪽으로 검색

*파일 접근권한
- rw- rw- r-- . 1 user user 214 3월 25 15:35 file_name.txt
>>파일 상세정보 보는 법 교재 p.232 참고.
>>rw- rw- r--는 rwx, 읽고(r) 쓰고(w) 실행(x)할 수 있는 접근권한(매우 중요)
>>하이픈은 아무권한이 주어지지 않았다는 의미
file 디렉터리or파일명 : 지정한 파일의 종류 알려줌(출력)
file 디렉터리명 파일명 : 지정 후 디렉터리와 파일의 종류 출력
>>ex. [ljh@localhost chap_05]$ file ../chap_04 centos_vi.txt
groups : 현재 접속 중인 사용자가 속한 그룹 알림
groups 사용자명 : 지정한 사용자가 속한 그룹 알림

rmx의 파일과 디렉터리 접근권한 교재 p.236 참고
>>rwx rwx rwx / 소유자 그룹 기타사용자 순이다.
chmod 심볼릭모드(권한) 파일명 : change mode, 접근권한 변경
>>파일명이 초록색으로 뜨면 실행파일이라는 것
chmod 심볼릭모드,심볼릭모드 파일명 : 접근권한 여러 개 변경을 한 번에 하기

rmx를 숫자모드로 접근권한 설정
rmx-2진수-8진수-권한값

*기본 접근권한 확인
마스크값 - 파일/디렉터리 생성 시 부여하지 않을 권한에 대한 지정값 = 가린다
(모드에 따라 기본 권한값이 주어짐)
umask : use mask, 현재 마스크값 조회
umask 마스크값 : 지정한 마스크값으로 변경, 설정
umask -S : 접근권한 문자로 출력



2020.03.26

*특수 접근권한
SetUid, SetGid, Sticky Bit 세가지가 있음
순서대로 4, 2, 1의 값을 가짐
SetUid, SetGid는 파일에 대해, Sticky Bit는 디렉토리에 대해 특수권한 설정
SetUid, SetGid = s, S / Sticky Bit = t, T
>>실행권한이 있으면 소문자로, 없으면 대문자로 표기가 됨

*마운트(mount : 올라가다, 시작하다)
외부장치와 연결하는 것을 마운트
디렉터리 계층 구조에서 파일시스템이 연결되는 디렉터리는 *마운트포인트
-부팅할때마다 마운트 설정
-/etc/fstab에서 마운트 수행 설정
-반드시 root계정으로 설정

*RPM 패키지 (redhat package manager)
패키지로 소프트웨어를 관리하는 매니저.
패키지 관리라 편리, 일괄 삭제 업데이트 가능 BUT 패키지 의존성이 단점

*YUM(p.462~)
RPM의 문제점을 보완한 패키지
인터넷 연결이 되면 자동으로 패키지 업데이트함

yum check-update : 업데이트할 패키지 확인
yum search 패키지이름 : 필요한 패키지 검색
yum provides 파일이름 : 특정 파일이 속한 패키지 이름 확인
>>ex. yum provides my* : my를 포함한 파일이름이 속한 패키지 확인
yum list : CentOS에서 제공하는 패키지 목록 출력
yum list | more : 차례 차례 살펴볼 수 있음. 스페이스바 누르면 더보기, ctrl+c로 나가기
yum list available | more : yum 저장소에 설치가능한 패키지 목록 확인
yum list updates : 업데이트 가능한 패키지 목록 출력
yum remove 패키지명 : 설치되어 있는 패키지 삭제
yum grouplist : 패키지 그룹목록 확인
yum groupinstall 패키지이름 : 패키지 그룹 설치 
yum clean all : 기존 패키지 저장소 비우기
yum install 패키지명 : 패키지 설치

*iso(번거로운 작업을 하나의 파일로 축소)
genisoimage, cdrecord, growisofs

*파일의 압축과 묶음(p.484~)
xz 옵션 파일명 : 압축하기
-k : 기존 파일 삭제하지 않고 압축
-d : 압축 해체
-l : 압축파일의 목록과 압축률 출력

tar 동작 옵션 : tape archive, 확장자 tar로 파일 묶음/해체
>>동작
c : 새로운 묶음 생성
x : 묶인 파일 풂
t : 묶음 풀기 전, 묶인 경로 출력
C : 묶음 풀 때 지정된 디렉터리에 풂(지정 안하면 원래 디렉터리)
>>옵션
f : 묶음 파일 이름 지정(필수) 
v : 파일의 묶고 풀어지는 과정 출력(생략 가능)
J : tar + xz
z : tar + gzip
j : tar + bzip2

*CRON과 AT : 주기적 업뎃, 자동 실행은 크론, 일회성으로 작업 반복은 엣

*아파치 웹 서버 설치
yum -y install httpd : (yum으로) 아파치웹서버(httpd)를 질문 생략(-y)하며 설치
systemctl start httpd.service : 활성화 위해 서비스 httpd.service를 systemctl 명령으로 활성화
ps -ef | grep httpd : 프로세스 상태확인
firewall-cmd --add-service=http : 방화벽 열기 / http와 https 둘 다 해주는 게 좋음
>> 여기까지 했으면, ip addr 해서 자신의 ip주소를 브라우저 URL창에 입력해 접속
cd /var/www/html : 여기서 자원을 관리(index.html 같은 것들)

vi /etc/httpd/conf/httpd.conf : vi에디터로 httpd.conf 파일 열기(웹 서버 설정파일)
?<Direc : "<Direc" 검색(아래부터), 위부터 검색은 /<Direc // 넘어가려면 n 클릭(next)
:set numer (행 번호 보이게 세팅 / 라인모드 명령어)
나가기는 ctrl + c

>>검색했을 때, <Directory "/var/www/html"> ~ </Directory>
아파치 웹서버에 필요한 자원을 기본적으로 관리하는 기본설정 디렉터리(중요★)
리눅스에서 무료로 서버 제공(httpd)한다는 게 장점!


2020.03.27

*웹 서버 구축
# vi /etc/httpd/conf/httpd.conf
<Directory "/var/www/html"> : 현재 기본 설정 경로 /var/www/html
# DirectoryIndex index.html : 현재 기본 지정 문서 index.html

# firewall-cmd --permanent --add-service=http
# firewall-cmd --permanent --add-service=https
# firewall-cmd --reload
>>방화벽 열기

# systemctl enable httpd
# systemctl start httpd
>>웹 서버 활성화

# vi index.html
# cat index.html : 파일 내용 출력
>>ip주소/디렉터리/파일명.html (웹 페이지 뜸)

mobaXterm으로 자원 옮기는 법
파일을 넣고 싶을 때, 드래그 앤 드랍으로 파일 첨부!

*윈도우+shift+s 누르면 스크린 샷 캡쳐 가능

*마운트
-버추얼박스 설정-공유폴더-공유추가-경로 선택 후 자동마운트 체크-확인
-버추얼 박스 저장소-광학드라이브 디스크이미지 추가-C:/Program Files/Oracle/VirtualBox
들어가서 VBoxGuestAdditions.iso 파일 선택
-그리고 버추얼 시작 후 root로 로그인

#yum update
#yum groupinstall "Development Tools"
#yum install kernel-devel

# ls -la /dev/cdrom
# mount -r /dev/cdrom /mnt
# ls -la /mnt
# /mnt/VBoxLinuxAdditions.run : /mnt에 파일 실행 (할 때마다 까는 거 아님 처음에만!)
#mount -t vboxsf share /mnt : -t(타입정하고), share 폴더를 /mnt 경로로 연동!
>>share 폴더 가면 연동되어서 파일이 공유가 됨!

*DBMS
-DDL DML DCL
-요즘에는 mysql보다는 마리아db로 많이 넘어가는 추세
마리아db 설치
# yum -y install mariadb-server mariadb : 마리아db 설치
# systemctl status mariadb : 서버 활성화, 가동 전에 active로 활성 상태 체크 (dead/active)
# systemctl start mariadb : 활성화함, 가동 start
# mysql : 활성화되었으면, mysql 명령으로 접속
>>mysql모드에서는 mysql 언어랑 거의 똑같음.
show databases; // 데이터베이스(스키마) 목록 보기
create database 스키마명; // 스키마 생성
use 스키마명 // 지정 스키마 사용
show tables; // 테이블 목록 보기
desc 테이블명 // 테이블 구조 출력
create table 테이블명 (필드명 데이터타입, 필드명 데이터타입); // 테이블 생성
>> 세미콜론 전에 default charset=utf8 붙여주면 디폴트 값 지정 됨
alter table 테이블명 modify 필드명 데이터타입 Not null;
>>기본키(프라이머리키)로 만드려면 낫널 설정해야함
alter table 테이블명 add constraint 기본키이름 primary key (필드명);
>>기본키 지정(프라이머리키)
insert into 테이블명 values (값, 값); //데이터 삽입
update 테이블명 set 필드=값 where 조건; // 데이터 수정하기
select * from 테이블명 : 테이블 검색(출력)
