>>단축키와 사이트는 맨 아래에 정리되어 있음<<

20.02.10

★html★

vs code 설치(visual studio code)
> 깔고 나서 2가지의 부가기능 설치 / 한국어 패치, 라이브 서버(live server)

태그는 시작과 끝이 존재하며 괄호로 둘러싸여있음. 그 사이에 글자를 넣음
>>시작과 끝이 존재하지 않고 단독으로 있는 태그는 빈 태그라고 부름


**태그와 속성**
<h1></h1> : headline, 제목태그이며 h6까지 있음
<hr> : 빈 태그, 호라이즌의 약자. 수평으로 줄이 생기는 기능
<br> : 빈 태그이며, 브레이크의 약자. 줄 바꿈하는 기능
<p></p> : 단락 구분 태그. br이랑 비슷하나 다름
<b></b> : 볼드의 약자, 글씨를 굵게 만들어준다 ( = <strong></strong> )
<i></i> : 이탤릭의 약자, 글씨를 기울게 만들어준다 ( = <em></em> )
*** 볼드, 이탤릭의 태그가 왜 따로 또 있을까? 스트롱과 이엠은 강조형 의미론적 태그. 구글이 쓰기 편하게 만들어진 태그.
<h1 title = "내용"> : 타이틀 태그와 타이틀 속성은 다름! 속성으로 들어가는 타이틀은 툴팁이라고 하며, 마우스를 올렸을 때 설명같은 것이 나옴
<title></title> : 타이틀 태그. 탭의 제목에 뜨는 타이틀을 나타냄.
lorem : 텍스트

* vs code의 장점은 깃 기능이 내장되어 있음.





20.02.11

<img src="이미지링크"> : 이미지 태그

**리스트 태그**
<ul></ul> : unordered list의 약자, 순서가 없는 리스트
<ol></ol> : ordered list의 약자, 순서가 있는 리스트
<dl></dl> : define list의 약자, 정의 리스트. 무언가를 정의하고 설명하기 위한 리스트
<dt></dt> : define term / 정의할 용어
<dd></dd> : define description / 용어에 대한 설명
<li></li> : 리스트(내용)

**테이블태그+속성 설명**
<table></table>
<caption></caption> : 캡션은 테이블에 반드시 첫 번째로 삽입 (제목 개념)
<thead></thead>: table head
<tr></tr> : table row의 약자 row=행, 하나의 tr는 하나의 행이 된다(가로)
<th></th> : table headline, 강조 표시
<tbody></tbody> : table body
<td></td>: table data의 약자, 티헤드의 th과 갯수가 맞아야 함
<tfoot></tfoot> : table foot의 약자, 안에는 강조하기 위해 td가 아닌 th를 사용
<table border="n"> : border라는 속성은 외곽선을 보이게 하는 속성. n에다가 원하는 굵기의 숫자를 넣는다.
<th colspan="n"> : column span의 약자. 가로길이, 열을 하나로 늘린다. 좌우로 n만큼 합친다
<th rowsplan="n"> : row span의 약자. 세로길이, 행을 하나로 늘린다. 위아래로 n만큼 합친다 // 콜스판과 로우스판 다시 이해해보기... ....ㅡㅡㅠ
**

<a href="URL"></a> : 앵커(anchor, 닻). 일종의 책갈피 역할, URL을 넣어서 페이지 내부에서 이동을 하는 태그
<a href="URL" target="_self"></a> : target 속성. 링크에 연결된 HTML이 출력될 윈도우 창 지정. 기본 값은 "_self" 새 창으로 띄우는 건 "_blank"(=빈 공간이란 뜻)
download="" : 다운로드 속성이며, 속성 값을 다운로드함.
<h3 id="test">앵커</h3> : id 속성 지정. 
<a href=#test>앵커로 이동</a> : #id값 = 아이디 값이 표기된 곳으로 이동. 샵으로 꼭 지정 / 책갈피 기능
iframe : 유튜브로 가서 해당 영상의 공유-퍼가기 클릭하면 아이프레임값이 뜸. 긁어다가 입력하면 영상이 가져와짐.

<이론 수업> - 세 줄 요약
첫 번째. 웹과 인터넷은 다르다.
두 번째. 현재 크롬과 사파리같은 브라우저들이 대부분 차지하고 있기 때문에 그것의 맞춤 개발이 필요하다.
세 번째. 웹을 구성할 때 HTML, 다시 말하면 웹의 구조를 담당하는 HTML과 
웹 페이지에 어떤 꾸미는 것, 배치하는 것을 설정하는 CSS. 
마지막으로 웹의 동작이나 응용 프로그램 같은 것을 추가할 수 있는 자바스크립트. 이 세 가지로 현재 웹이 구성되고 있다. 





20.02.12

깃 허브 들어가서 
레퍼지토리 - settings - source에
none 값 설정되어있는 걸 master branch로 바꾸면
주소가 생성됨.
>>저장소에 올린 것을 웹 서버화. 작동된 모습을 다른 사람과 공유 가능함.


*시맨틱 태그 ( 검색 엔진이 탐색할 수 있게 만들어진 태그 / 표준 태그 )
<header> : 페이지나 섹션의 머리말
<nav> : 페이지 내의 목차
<section> : 페이지를 원하는 대로 구분
<article> : 콘텐츠를 담아줌
<aside> : 부가적인 내용
<footer> : 페이지나 섹션의 꼬리말

*태그 + 속성
<form action="" method=""></form> : 사용자의 입력을 받는 태그 (폼은 폼 요소가 있어야 작동)
<input type="속성값"></input> : 폼 요소 중의 하나 (폼 요소지만, 폼 없어도 작동함)
action 속성 : 폼 데이터를 받을 웹 페이지의 주소
get 방식 : 입력받은 데이터를 주소창을 통해 전달 (method 속성 값으로 입력)
query 방식 : 질의. (name 속성 값) 
placeholder 속성 : 인풋 창 안에 입력되어 있는 설명 속성, 일종의 가이드역할
size 속성 : 지정한 속성값만큼 사이즈 창이 뜸.(EX:size="10", 10글자가 들어갈만한 크기의 인풋 창 생성) 최소, 최대 사이즈는 따로 지정해야줘야 함
maxlength 속성 : 최대 입력 값 제한
minlength 속성 : 최소 입력 값 제한
<textarea cols="n" rows="n"></textarea> : 텍스트 창 크기. 텍스트에어리어 태그 사이에 글자를 넣으면 창에 글자가 입력된 상태로 디폴트값.
<input type="text" list="아이디값"> : 인풋 창에 들어갈 수 있는 데이터 값 제한. (아이디값으로 속성 값 입력/데이터 리스트 연동)
<datalist id="아이디"></datalist> : 데이터 리스트 생성
<option value = ""> : 빈 태그, 데이터 값 지정(데이터 리스트 태그 사이에 입력)
input type="submit" : 제출
input type="password" : 패스워드
input type="reset" : 초기화
input type="checkbox" : 체크박스( name 속성 넣어줘야 함! 그래야 주소창 변동O, 그 다음에 value는 "t" // t는 true, f는 false, *주소창 변동은 form태그 안에 넣었을 경우만. )
input type="radio" : 하나만 체크 가능한 선택지 타입
<select name=""></select> : 위의 데이터리스트 태그와 비슷한 형식이며 똑같이 안에 option 태그를 입력함. but, option 태그는 빈 태그가 아닌 완전한 태그.
<label for="아이디값"></label><input type="타입" id="아이디값"> : 라벨링. for에 다른 태그의 아이디값를 넣어주면 그 태그와 연결.(의미론적) 
*라벨 부가설명-시각적으로 표시되는 건 아니고 데이터적으로 각자 하나의 의미를 갖고 있는 것들을 연관성 있는 것을 연결시켜주는 것.
<fieldset></fieldset> : 필드셋(네모박스 공간 형성)
<legend></legend> : 필드셋 안에 들어가는 이름표


*버튼 만드는 거 2가지 방식
<input type="button" value="새 버튼" onclick="alert('버튼을 누르셨네요!')"> : onclick="alert('내용')" 속성은 팝업 창 뜨는 거
<button type="button">새 버튼2</button> : 인풋 태그와 다른 점> 버튼 태그는 시작 태그와 끝 태그 사이에 밸류 값 입력

// input 속성 값은 교재 141쪽부터 참고!






**단축키
ctrl+L, ctrl+O = 라이브서버
ctrl + / = 주석단축키
alt+방향키 = 현재 위치하고 있는 줄을 통째로 이동
alt+shift+방향키 = 현재 위치하고 있는 줄을 생성하며 이동
ctrl+shift+k = 현재 위치하고 있는 줄 삭제
tap = 오른쪽으로 줄 맞춤
tap + shift = 왼쪽으로 줄 맞춤
ctrl+B = 왼쪽 바 on/off
ctrl+` = 터미널 창 on/off
table>thead+tbody = 테이블에 속해있는 티헤드와 티바디 코드 생성 ( 다른 것도 만들기 가능 )



**사이트

>무료 이미지
https://pixabay.com/ko/

>vscode 단축키
https://demun.github.io/vscode-tutorial/shortcuts/

*레퍼런스 참고사이트들************************************************************
1>웹의 표준을 관리, 관련 기술 정립하는 단체(W3)가 운영하는 사이트 (영어/무료)
https://www.w3schools.com/

2>모질라 재단에서 만든 웹 표준 사이트 (한글도 나오지만 영어도 나옴/무료)
https://developer.mozilla.org/ko/

3>tcp스쿨 (한글/유료)
http://tcpschool.com/

4>오브코스 (핵심적인 내용/치트시트)
https://ofcourse.kr/

5>포에마웹 (기능 단위로 정리되어 있음)
https://poiemaweb.com/

>플랫아이콘(버튼이미지)
https://www.flaticon.com/
*************************************************************************************
